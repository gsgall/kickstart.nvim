local ls = require 'luasnip'
local s = ls.snippet
local t = ls.text_node
local i = ls.insert_node
local f = ls.function_node
-- Helper function to create a snippet with a trigger and body

ls.add_snippets('tex', {
  s('pdiff', {
    t { '\\pdiff[ ' },
    i(1),
    t { ' ]{ ' },
    i(2),
    t { ' }{ ' },
    i(3),
    t ' }',
    i(0),
  }),
  s('diff', {
    t { '\\diff[ ' },
    i(1),
    t { ' ]{ ' },
    i(2),
    t { ' }{ ' },
    i(3),
    t ' }',
    i(0),
  }),
  s('tdiff', {
    t { '\\diff{ ', '' },
    i(1),
    t ' }{t} ',
    i(0),
  }),
  s('tpdiff', {
    t { '\\pdiff{ ', '' },
    i(1),
    t ' }{t} ',
    i(0),
  }),
  s('sec', {
    t '\\section{',
    i(1),
    t '}',
    i(0),
  }),
  s('ssec', {
    t '\\subsection{',
    i(1),
    t '}',
    i(0),
  }),
  s('sssec', {
    t '\\subsubsection{',
    i(1),
    t '}',
    i(0),
  }),
  s('eq', {
    t { '\\begin{align}', '  ' },
    i(1),
    t { '', '\\end{align}' },
    i(0),
  }),
  s('peq', {
    t { '\\begin{align*}', '  ' },
    i(1),
    t { '', '\\end{align*}' },
    i(0),
  }),
  s('ilist', {
    t { '\\begin{itemize}', '  \\item ' },
    i(1),
    t { '', '\\end{itemize}' },
    i(0),
  }),
  s('elist', {
    t { '\\begin{enumerate}', '  \\item ' },
    i(1),
    t { '', '\\end{enumerate}' },
    i(0),
  }),
  s('newday', {
    t { '\\newpage', '\\section{' },
    f(function()
      return os.date '%m/%d/%Y' -- Inserts the current date in MM/DD/YYYY format
    end),
    t { '}', '\\subfile{sections/l' },
    i(1, 'count'), -- Placeholder for the subfile name
    t { '}', '' },
    i(0),
  }),
  s('newsec', {
    t { '\\newpage', '\\section{' },
    i(1),
    t { '}', '' },
    i(0),
  }),
  s('newssec', {
    t { '\\newpage', '\\subsection{' },
    i(1),
    t { '}', '' },
    i(0),
  }),
  s('newsssec', {
    t { '\\newpage', '\\subsubsection{' },
    i(1),
    t { '}', '' },
    i(0),
  }),
  s('beg', {
    t '\\begin{',
    i(1),
    t '}',
    t { '', '  ' },
    i(2),
    t { '', '\\end{' },
    f(function(args)
      return args[1][1]
    end, { 1 }),
    t '}',
    i(0),
  }),
  s('lrp', {
    t '\\left( ',
    i(1),
    t ' \\right)',
    i(0),
  }),
  s('lrc', {
    t '\\left\\{ ',
    i(1),
    t ' \\right\\}',
    i(0),
  }),
  s('lrb', {
    t '\\left[ ',
    i(1),
    t ' \\right]',
    i(0),
  }),
  s('lra', {
    t '\\left< ',
    i(1),
    t ' \\right>',
    i(0),
  }),
  s('olfrac', {
    t { '\\frac{ ' },
    i(1),
    t { ' }{ ' },
    i(2),
    t { ' }' },
    i(0),
  }),
  s('frac', {
    t { '\\frac{', '  ' },
    i(1),
    t { '', '}{', '  ' },
    i(2),
    t { '', '}' },
    i(0),
  }),
  s('mat', {
    t { '\\begin{bmatrix}', '  ' },
    i(1),
    t { '', '\\end{bmatrix}' },
    i(0),
  }),
  s('ip', {
    t '\\innerproduct{',
    i(1),
    t '}{',
    i(2),
    t '}',
  }),
  s('align', {
    t { '\\begin{align}', '  ' },
    i(1),
    t { '', '\\end{align}' },
    i(0),
  }),
  s('newproblem', {
    t { '\\newpage', '\\section{}', '\\subfile{sections/p' },
    i(1, 'count'),
    t { '}', '' },
    i(0),
  }),
  s('ibp-beg', {
    t { '\\tabmethod{', '\\tabmethodstep{' },
    i(1, 'sign'),
    t { '}{' },
    i(2, 'u'),
    t { '}{' },
    i(3, 'dv'),
    t { '}' },
    i(0),
    t { '', '}' },
  }),
  s('ibpstep', {
    t { '\\tabmethodstep{' },
    i(1, 'sign'),
    t { '}{' },
    i(2, 'u'),
    t { '}{' },
    i(3, 'dv'),
    t { '}' },
    i(0),
  }),
  s('ibpstep-na', {
    t { '\\tabmethodstepnoarrow{' },
    i(1, 'sign'),
    t { '}{' },
    i(2, 'u'),
    t { '}{' },
    i(3, 'dv'),
    t { '}' },
    i(0),
  }),
  s('ibpstep-last', {
    t { '\\tabmethodlaststep{' },
    i(1, 'sign'),
    t { '}{' },
    i(2, 'u'),
    t { '}{' },
    i(3, 'dv'),
    t { '}' },
    i(0),
  }),
  s('fig', {
    t { '\\begin{figure}[H]', '  \\centering', '  \\includegraphics[' },
    i(1),
    t ']{',
    i(2),
    t { '}', '  \\caption{' },
    i(3),
    t { '}', '  \\label{fig:' },
    i(4),
    t { '}', '\\end{figure}', '' },
    i(0),
  }),
  s('pfig', {
    t { '\\begin{figure}[H]', '  \\centering', '  \\includegraphics[' },
    i(1),
    t ']{',
    i(2),
    t { '}', '\\end{figure}', '' },
    i(0),
  }),
  s('tab', {
    t { '\\begin{table}[H]', '  \\begin{tabu}{' },
    i(1),
    t { '}', '    ' },
    i(2),
    t { '', '    \\hline', '    \\hline', '    ' },
    i(3),
    t { '', '    \\hline', '  \\end{tabu}', '  \\caption{' },
    i(4),
    t { '}', '  \\label{tab:' },
    i(5),
    t { '}', '\\end{table}', '' },
    i(0),
  }),
  s('col', {
    t { '\\begin{columns}', '  \\column{' },
    i(1),
    t { '\\textwidth}', '  ' },
    i(2),
    t { '', '\\end{columns}' },
  }),
  s('ncol', {
    t { '\\column{' },
    i(1),
    t { '\\textwidth}', '' },
    i(0),
  }),
  s('frame', {
    t { '\\begin{frame}{' },
    i(1),
    t { '}', '' },
    t { '  \\begin{columns}', '' },
    t { '    \\column{' },
    i(2),
    t { '\\textwidth}', '      ' },
    i(3),
    t { '', '  \\end{columns}' },
    t { '', '\\end{frame}' },
    i(0),
  }),
  s('blk', {
    t { '\\begin{block}{' },
    i(1),
    t { '}', '  ' },
    i(2),
    t { '', '\\end{block}' },
    i(0),
  }),
})

vim.api.nvim_create_autocmd('FileType', {
  pattern = 'tex',
  callback = function()
    ls.filetype_extend('tex', { 'latex' })
  end,
})
